image: registry.gitlab.com/mpapp-private/manuscripts-frontend/node8-aws

# Environment variables needed:
#
# API_BASE_URL: the base URL of the manuscripts-api endpoint
# API_APPLICATION_ID: the application ID sent to the manuscripts-api endpoint
# SYNC_GATEWAY_URL: the base URL of the sync gateway endpoint
# S3_BUCKET: S3 bucket name
# CLOUDFRONT_ID: CloudFront distribution ID
# STORYBOOK_BUCKET_NAME: Storybook S3 bucket name
# STORYBOOK_DISTRIBUTION_ID: Storybook CloudFront distribution ID

stages:
  - test
  - deploy

test:
  stage: test
  script:
    - yarn install --frozen-lockfile --non-interactive
    - yarn lint
    - yarn test
    - yarn build
  tags:
    - nodejs-8

storybook:
  environment:
    name: storybook
    url: https://storybook.manuscripts.io/
  stage: deploy
  script:
    - yarn install --frozen-lockfile --non-interactive
    - yarn run build-storybook
    - aws s3 sync --include "*" --cache-control "max-age=2592000" --acl "public-read" --sse "AES256" storybook-static/ "s3://${STORYBOOK_BUCKET_NAME}"
    - aws cloudfront create-invalidation --distribution-id ${STORYBOOK_DISTRIBUTION_ID} --paths /index.html /
  tags:
    - nodejs-8
    - awscli
  only:
    - master
    - triggers

deploy_production:
  environment:
    name: production
    url: https://www.manuscripts.io/
  stage: deploy
  script:
    - yarn install --frozen-lockfile --non-interactive --production
    - yarn build
    - aws s3 cp --recursive --include "*" --cache-control "max-age=2592000" --acl "public-read" --sse "AES256" dist/ s3://${S3_BUCKET}
    - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths /index.html /
  tags:
    - nodejs-8
    - awscli
  only:
    - /^v\d+\./ # only deploy release tags, which start with "v" and a version number

deploy_dev:
  environment:
    name: dev
    url: https://dev.manuscripts.io/
  stage: deploy
  script:
    - yarn install --frozen-lockfile --non-interactive --production
    - yarn build
    - aws s3 cp --recursive --include "*" --cache-control "max-age=2592000" --acl "public-read" --sse "AES256" dist/ s3://${S3_BUCKET}
    - aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_ID} --paths /index.html /
  tags:
    - nodejs-8
    - awscli
  only:
    refs:
      - master
      - triggers
    variables:
      - $CI_COMMIT_MESSAGE =~ /#deploy-dev/

publish_image:
  stage: deploy
  environment:
    name: docker
  variables:
    CONTAINER_IMAGE: registry.gitlab.com/mpapp-private/manuscripts-frontend/manuscripts-frontend:latest
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker pull ${CONTAINER_IMAGE} || true
    # - docker build --build-arg API_APPLICATION_ID="$API_APPLICATION_ID" --build-arg API_BASE_URL="$API_BASE_URL" --build-arg CSL_DATA_URL="$CSL_DATA_URL" --build-arg SYNC_GATEWAY_URL="$SYNC_GATEWAY_URL" -f docker/client/production/Dockerfile --cache-from ${CONTAINER_IMAGE} --tag ${CONTAINER_IMAGE} .
    - docker build -f docker/client/development/Dockerfile --cache-from ${CONTAINER_IMAGE} --tag ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}
  tags:
    - docker-ce
  only:
    - master


