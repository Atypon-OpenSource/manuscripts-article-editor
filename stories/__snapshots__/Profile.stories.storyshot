// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Account/Modals Profile 1`] = `
.c29 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c29:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c29:hover {
  background-color: #f2fbfc;
}

.c29:invalid {
  box-shadow: none;
}

.c27 .c28:first-of-type {
  margin-top: 4px;
}

.c27 .c28:last-of-type {
  margin-bottom: 4px;
}

.c27 .c28:not(:first-of-type) {
  margin-top: -1px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}

.c27 .c28:not(:last-of-type) {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  margin-bottom: 0;
}

.c27 .c28:not(:last-of-type):focus + .c28 {
  border-top-color: #bce7f6;
}

.c31 {
  font: 400 20px / 24px "Lato",sans-serif;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  color: #6e6e6e;
}

.c34 {
  border: 1px solid #e2e2e2;
  border-radius: 8px;
  background: #fff;
  margin-bottom: 2px;
  overflow: hidden;
}

.c35 {
  margin: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  font-size: 0.875rem;
  padding-right: 0.5rem;
  background: transparent;
  color: inherit;
}

.c37 {
  border: 0;
  border-radius: 50%;
  margin-right: 0.6em;
  min-width: 20px;
}

.c36 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  background: transparent;
  border: none;
  text-align: left;
  font-family: "Lato",sans-serif;
  font-size: 1rem;
  padding: 0.6em 0.5em;
  outline: none;
}

.c36:focus {
  color: #0b6bb8;
}

.c36 svg {
  -webkit-transform: initial;
  -ms-transform: initial;
  transform: initial;
}

.c38 {
  border: none;
  background: transparent;
  padding: 0;
  outline: none;
}

.c38:focus path {
  fill: #fff;
}

.c38 svg {
  width: 2rem;
  height: 2rem;
}

.c30 {
  margin: 0 1.89rem 1rem;
}

.c32 {
  margin: 1rem 0;
}

.c33 {
  margin-bottom: 0.5rem;
}

.c39 {
  padding-right: 0.71rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c39 svg {
  width: 1.5rem;
  height: 1.5rem;
}

.c39 circle,
.c39 use {
  fill: #0d79d0;
}

.c39 path {
  -webkit-mask: none;
  mask: none;
}

.c3 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c3 svg + span {
  margin-left: 4px;
}

.c15 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c15:not([disabled]):hover,
.c15:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c15:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c20 {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c20:not([disabled]):hover,
.c20:not([disabled]):focus {
  color: #0d79d0;
  background-color: #f2fbfc;
  border-color: #f2fbfc;
}

.c20:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c4 {
  padding: 0;
  height: 40px;
  width: 40px;
}

.c5 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c5:not([disabled]):hover,
.c5:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c5:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c6 {
  background: #fff;
  border: 5px solid #fff !important;
  border-radius: 50%;
  box-sizing: border-box;
  box-shadow: 0 0 8px 0 rgba(0,0,0,0.12);
  display: inline-block;
  height: 40px;
  padding: 0;
  position: relative;
  width: 40px;
  -webkit-transition: border-color 0.25s;
  transition: border-color 0.25s;
}

.c6:focus,
.c6:hover {
  background: #f2fbfc !important;
}

.c6 svg {
  max-height: 16px;
  max-width: 16px;
  vertical-align: middle;
}

.c12 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c13 path {
  fill: #6e6e6e;
}

.c13:hover path {
  fill: #6e6e6e;
}

.c1 {
  background: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  font-family: "Lato",sans-serif;
  overflow: hidden;
  margin: 12px;
}

.c2 {
  position: absolute;
  right: 0;
  top: 0;
  z-index: 1;
}

.c7 {
  box-shadow: none;
  text-indent: -99999px;
}

.c7::before,
.c7::after {
  background-color: #6e6e6e;
  border-radius: 2px;
  content: ' ';
  display: block;
  height: 14px;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  width: 2px;
  position: absolute;
  top: calc(50% - 7px);
  left: calc(50% - 1px);
}

.c7::after {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

.c22 {
  padding: 16px;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c9 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  padding: 16px 8px;
  width: 100%;
  overflow: hidden;
  background-color: #fafafa;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  max-width: 40vw;
  overflow: auto;
  width: 340px;
}

.c23 {
  box-sizing: border-box;
  max-width: 60vw;
  width: 480px;
}

.c8 {
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  height: 90vh;
  max-height: 680px;
}

.c10 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  padding: 0 12px;
  position: relative;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  overflow-y: auto;
}

.c24 {
  padding: 16px;
}

.c25 {
  border: none;
}

.c26 {
  font-size: 20px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  color: #6e6e6e;
}

.c17 {
  font-weight: 500;
  text-align: center;
}

.c18 {
  font-size: 14px;
  text-align: center;
  color: #6e6e6e;
  margin-top: 10px;
  margin-bottom: 40px;
}

.c16 {
  padding-left: 7px;
  padding-right: 7px;
}

.c16:hover {
  background: #fff;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c19 {
  width: 100%;
  margin-bottom: 10px;
}

.c21 {
  width: 100%;
}

.c14 {
  position: relative;
  bottom: 37px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

<div
  className="c0"
>
  <div>
    <div>
      <div
        className="c1"
      >
        <div
          className="c2"
        >
          <button
            className="c3 c4 c5 c6 c7"
            data-cy="modal-close-button"
            onClick={[Function]}
            type="button"
          />
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              <div
                className="c11"
              >
                <div
                  className="c12"
                >
                  <svg
                    className="c13"
                    color="#6e6e6e"
                    height={150}
                    viewBox="0 0 34 34"
                    width={150}
                  >
                    <path
                      d="M17 1c8.837 0 16 7.163 16 16s-7.163 16-16 16S1 25.837 1 17 8.163 1 17 1zm0 17.585a9.341 9.341 0 00-9.324 9.905A14.737 14.737 0 0017 31.797a14.74 14.74 0 009.324-3.306A9.341 9.341 0 0017 18.586zm0-16.382C8.828 2.203 2.203 8.828 2.203 17c0 4.03 1.612 7.685 4.226 10.354.243-4.575 3.391-8.378 7.633-9.601a5.605 5.605 0 115.876.001c4.242 1.222 7.39 5.025 7.633 9.6A14.75 14.75 0 0031.797 17c0-8.172-6.625-14.797-14.797-14.797zm0 6.418a4.36 4.36 0 100 8.719 4.36 4.36 0 000-8.719z"
                      fill="#6E6E6E"
                    />
                  </svg>
                </div>
              </div>
              <div
                className="c14"
              >
                <button
                  className="c3 c15 c16"
                  onClick={[Function]}
                  type="button"
                >
                  Add Picture
                </button>
              </div>
              <div
                className="c17"
              />
              <div
                className="c18"
              >
                Member since
                 
                Jan 1, 2020
              </div>
              <button
                className="c3 c15 c19"
                onClick={[Function]}
                type="button"
              >
                Change Password
              </button>
              <button
                className="c3 c20 c21"
                onClick={[Function]}
                type="button"
              >
                Delete Account
              </button>
            </div>
          </div>
          <div
            className="c22 c23"
          >
            <form
              action="#"
              noValidate={true}
              onReset={[Function]}
              onSubmit={[Function]}
            >
              <div
                className="c24"
              >
                <fieldset
                  className="c25"
                >
                  <legend
                    className="c26"
                  >
                    Details
                  </legend>
                  <div
                    className="c27"
                  >
                    <input
                      checked={true}
                      className="c28 c29"
                      name="bibliographicName.given"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="given name"
                      value="Jon"
                    />
                    <input
                      checked={true}
                      className="c28 c29"
                      name="bibliographicName.family"
                      onBlur={[Function]}
                      onChange={[Function]}
                      onFocus={[Function]}
                      placeholder="family name"
                      value="Snow"
                    />
                  </div>
                </fieldset>
              </div>
            </form>
            <div
              className="c30"
            >
              <legend
                className="c31"
              >
                Affiliations
              </legend>
              <div
                className="c32"
              >
                <div
                  className="c33"
                >
                  <section
                    className="c34"
                  >
                    <h4
                      className="c35"
                    >
                      <button
                        className="c36"
                        onClick={[Function]}
                        type="button"
                      >
                        <svg
                          className="c37"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <g
                            fill="none"
                            fillRule="evenodd"
                            transform="matrix(1 0 0 -1 0 20)"
                          >
                            <circle
                              cx={10}
                              cy={10}
                              r={9}
                              stroke="#E2E2E2"
                            />
                            <path
                              d="M6.505 10.974l3.548-3 3.652 2.96"
                              stroke="#6E6E6E"
                              strokeLinecap="round"
                              strokeWidth={2}
                            />
                          </g>
                        </svg>
                        Foobar University
                      </button>
                      <button
                        aria-label="Delete this affiliation"
                        className="c38"
                        onClick={[Function]}
                        type="button"
                      >
                        <svg
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M15.494 3.375h-3.539c-.025-.21-.241-.375-.504-.375H8.548c-.262 0-.478.165-.503.375H4.506c-.28 0-.506.186-.506.417v.791c0 .23.227.417.506.417h10.988c.28 0 .506-.186.506-.417v-.791c0-.23-.227-.417-.506-.417zM5 6v10.491c0 .281.23.509.513.509h8.974a.51.51 0 00.513-.509V6H5zm3.753 7.874c0 .31-.253.561-.565.561a.563.563 0 01-.565-.56V8.311c0-.31.253-.561.565-.561.312 0 .565.25.565.56v5.563zm3.624 0c0 .31-.253.561-.565.561a.563.563 0 01-.565-.56V8.311c0-.31.253-.561.565-.561.312 0 .565.25.565.56v5.563z"
                            fill="#6E6E6E"
                          />
                        </svg>
                      </button>
                    </h4>
                  </section>
                  <section
                    className="c34"
                  >
                    <h4
                      className="c35"
                    >
                      <button
                        className="c36"
                        onClick={[Function]}
                        type="button"
                      >
                        <svg
                          className="c37"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <g
                            fill="none"
                            fillRule="evenodd"
                            transform="matrix(1 0 0 -1 0 20)"
                          >
                            <circle
                              cx={10}
                              cy={10}
                              r={9}
                              stroke="#E2E2E2"
                            />
                            <path
                              d="M6.505 10.974l3.548-3 3.652 2.96"
                              stroke="#6E6E6E"
                              strokeLinecap="round"
                              strokeWidth={2}
                            />
                          </g>
                        </svg>
                        Foobar Collage of IT
                      </button>
                      <button
                        aria-label="Delete this affiliation"
                        className="c38"
                        onClick={[Function]}
                        type="button"
                      >
                        <svg
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M15.494 3.375h-3.539c-.025-.21-.241-.375-.504-.375H8.548c-.262 0-.478.165-.503.375H4.506c-.28 0-.506.186-.506.417v.791c0 .23.227.417.506.417h10.988c.28 0 .506-.186.506-.417v-.791c0-.23-.227-.417-.506-.417zM5 6v10.491c0 .281.23.509.513.509h8.974a.51.51 0 00.513-.509V6H5zm3.753 7.874c0 .31-.253.561-.565.561a.563.563 0 01-.565-.56V8.311c0-.31.253-.561.565-.561.312 0 .565.25.565.56v5.563zm3.624 0c0 .31-.253.561-.565.561a.563.563 0 01-.565-.56V8.311c0-.31.253-.561.565-.561.312 0 .565.25.565.56v5.563z"
                            fill="#6E6E6E"
                          />
                        </svg>
                      </button>
                    </h4>
                  </section>
                </div>
                <div
                  className=" css-b62m3t-container"
                  onKeyDown={[Function]}
                >
                  <span
                    className="css-1f43avz-a11yText-A11yText"
                    id="react-select-4-live-region"
                  />
                  <span
                    aria-atomic="false"
                    aria-live="polite"
                    aria-relevant="additions text"
                    className="css-1f43avz-a11yText-A11yText"
                  />
                  <div
                    className=" css-19titw-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className=" css-319lph-ValueContainer"
                    >
                      <div
                        className=" css-14el2xx-placeholder"
                        id="react-select-4-placeholder"
                      >
                        Begin typing to add affiliation
                      </div>
                      <div
                        className=" css-6j8wv5-Input"
                        data-value=""
                      >
                        <input
                          aria-autocomplete="list"
                          aria-controls="react-select-4-listbox"
                          aria-describedby="react-select-4-placeholder"
                          aria-expanded={false}
                          aria-haspopup={true}
                          aria-owns="react-select-4-listbox"
                          autoCapitalize="none"
                          autoComplete="off"
                          autoCorrect="off"
                          className=""
                          disabled={false}
                          id="react-select-4-input"
                          onBlur={[Function]}
                          onChange={[Function]}
                          onFocus={[Function]}
                          role="combobox"
                          spellCheck="false"
                          style={
                            Object {
                              "background": 0,
                              "border": 0,
                              "color": "inherit",
                              "font": "inherit",
                              "gridArea": "1 / 2",
                              "label": "input",
                              "margin": 0,
                              "minWidth": "2px",
                              "opacity": 1,
                              "outline": 0,
                              "padding": 0,
                              "width": "100%",
                            }
                          }
                          tabIndex={0}
                          type="text"
                          value=""
                        />
                      </div>
                    </div>
                    <div
                      className="c39"
                    >
                      <svg
                        height={36}
                        viewBox="0 0 36 36"
                        width={36}
                      >
                        <defs>
                          <circle
                            cx={18}
                            cy={18}
                            id="svg-addauthor-a"
                            r={18}
                          />
                        </defs>
                        <g
                          fill="none"
                          fillRule="evenodd"
                        >
                          <mask
                            fill="#fff"
                            id="svg-addauthor-b"
                          >
                            <use
                              xlinkHref="#svg-addauthor-a"
                            />
                          </mask>
                          <use
                            fill="#FFBD26"
                            xlinkHref="#svg-addauthor-a"
                          />
                          <path
                            d="M18.005 10.493a.7.7 0 01.7.7l-.001 5.6h5.6a.7.7 0 010 1.4h-5.6v5.6a.7.7 0 01-1.4 0v-5.6h-5.6a.7.7 0 010-1.4h5.6v-5.6a.7.7 0 01.7-.7z"
                            fill="#FFF"
                            mask="url(#svg-addauthor-b)"
                            stroke="#FFF"
                          />
                        </g>
                      </svg>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Account/Profile AvatarFileUpload - with new Avatar 1`] = `
.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c5 svg + span {
  margin-left: 4px;
}

.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  cursor: default;
  background-color: #e2e2e2 !important;
  border-color: #e2e2e2 !important;
  color: #fff !important;
}

.c8 svg + span {
  margin-left: 4px;
}

.c9 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):hover,
.c9:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c6 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c6:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  padding: 16px 8px;
  width: 100%;
  overflow: hidden;
  background-color: #fafafa;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  max-width: 40vw;
  overflow: auto;
  width: 340px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  margin-bottom: 10px;
}

.c10 {
  margin-bottom: 10px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  margin-bottom: 30px;
  background-color: #fff;
  overflow: hidden;
}

.c1 {
  width: 300px;
  height: 600px;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <div
          className="c3"
        >
          <div />
          <input
            className="AvatarFileUpload__RangeInput-sc-13z91ld-10"
            max={4}
            min={1}
            onChange={[Function]}
            step={0.2}
            type="range"
            value={1}
          />
        </div>
        <div
          className="c4"
        >
          <button
            className="c5 c6 c7"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Save Avatar
          </button>
          <button
            className="c8 c6 c7"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Remove Avatar
          </button>
          <button
            className="c5 c9 c10"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Account/Profile AvatarFileUpload - with old Avatar 1`] = `
.c13 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  cursor: default;
  background-color: #e2e2e2 !important;
  border-color: #e2e2e2 !important;
  color: #fff !important;
}

.c13 svg + span {
  margin-left: 4px;
}

.c16 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c16 svg + span {
  margin-left: 4px;
}

.c17 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c17:not([disabled]):hover,
.c17:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c17:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c14 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c14:not([disabled]):hover,
.c14:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c14:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c6 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c7 {
  width: 150px;
  height: 150px;
  border-radius: 50%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  padding: 16px 8px;
  width: 100%;
  overflow: hidden;
  background-color: #fafafa;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  max-width: 40vw;
  overflow: auto;
  width: 340px;
}

.c3 {
  cursor: pointer;
}

.c3 * {
  pointer-events: none;
}

.c4 {
  color: #acb8c7;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  margin-top: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 25px;
}

.c9 {
  font-size: 20px;
  line-height: 24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #353535;
}

.c10 {
  font-size: 16px line-height:24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #6e6e6e;
}

.c11 {
  margin: 0 2px;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #0d79d0;
  cursor: pointer;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c15 {
  margin-bottom: 10px;
}

.c18 {
  margin-bottom: 10px;
}

.c5 {
  width: 150px;
  height: 150px;
  background-color: #fff;
  border: solid 1px #bce7f6;
  border-radius: 50%;
}

.c1 {
  width: 300px;
  height: 600px;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <div
          className="c3"
          onClick={[Function]}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <div
            className="c4"
          >
            <div
              className="c5"
            >
              <div
                className="c6"
              >
                <img
                  className="c7"
                  onError={[Function]}
                  size={150}
                  src="test-file-stub"
                />
              </div>
            </div>
            <div
              className="c8"
            >
              <div
                className="c9"
              >
                Drag file above
              </div>
              <div
                className="c10"
              >
                or 
                <span
                  className="c11"
                >
                  browse
                </span>
                 for a file
                <div>
                  to replace the image
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="c12"
        >
          <button
            className="c13 c14 c15"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Save Avatar
          </button>
          <button
            className="c16 c14 c15"
            disabled={false}
            onClick={[Function]}
            type="button"
          >
            Remove Avatar
          </button>
          <button
            className="c16 c17 c18"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Account/Profile AvatarFileUpload 1`] = `
.c11 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  cursor: default;
  background-color: #e2e2e2 !important;
  border-color: #e2e2e2 !important;
  color: #fff !important;
}

.c11 svg + span {
  margin-left: 4px;
}

.c14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c14 svg + span {
  margin-left: 4px;
}

.c15 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c15:not([disabled]):hover,
.c15:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c15:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c12 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c12:not([disabled]):hover,
.c12:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c12:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c2 {
  box-sizing: border-box;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  padding: 16px 8px;
  width: 100%;
  overflow: hidden;
  background-color: #fafafa;
  border-top-left-radius: 8px;
  border-bottom-left-radius: 8px;
  max-width: 40vw;
  overflow: auto;
  width: 340px;
}

.c3 {
  cursor: pointer;
}

.c3 * {
  pointer-events: none;
}

.c5 {
  width: 150px;
  height: 150px;
  background-color: #fafafa;
  border: dashed 3px #bce7f6;
  border-radius: 50%;
}

.c4 {
  color: #acb8c7;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 {
  margin-top: 30px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-bottom: 25px;
}

.c7 {
  font-size: 20px;
  line-height: 24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #353535;
}

.c8 {
  font-size: 16px line-height:24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #6e6e6e;
}

.c9 {
  margin: 0 2px;
  font-size: 16px;
  line-height: 24px;
  -webkit-letter-spacing: -0.4px;
  -moz-letter-spacing: -0.4px;
  -ms-letter-spacing: -0.4px;
  letter-spacing: -0.4px;
  text-align: center;
  color: #0d79d0;
  cursor: pointer;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c13 {
  margin-bottom: 10px;
}

.c16 {
  margin-bottom: 10px;
}

.c1 {
  width: 300px;
  height: 600px;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <div
          className="c3"
          onClick={[Function]}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
        >
          <div
            className="c4"
          >
            <div
              className="c5"
            />
            <div
              className="c6"
            >
              <div
                className="c7"
              >
                Drag file above
              </div>
              <div
                className="c8"
              >
                or 
                <span
                  className="c9"
                >
                  browse
                </span>
                 for a file
              </div>
            </div>
          </div>
        </div>
        <div
          className="c10"
        >
          <button
            className="c11 c12 c13"
            disabled={true}
            onClick={[Function]}
            type="button"
          >
            Save Avatar
          </button>
          <button
            className="c14 c15 c16"
            onClick={[Function]}
            type="button"
          >
            Cancel
          </button>
        </div>
      </div>
    </div>
  </div>
</div>
`;
