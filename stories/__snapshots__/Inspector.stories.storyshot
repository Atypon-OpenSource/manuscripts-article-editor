// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Inspector Manage Section 1`] = `
.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c8 {
  margin: 8px 8px 32px;
}

.c12 {
  border: none;
  background: none;
  cursor: pointer;
}

.c12 .tooltip {
  border-radius: 6px;
}

.c12:focus {
  outline: none;
}

.c13 {
  width: 100%;
}

.c13 .DatePicker {
  width: 100%;
  z-index: 10;
}

.c13 .Calendar__weekDay {
  color: #e6e6e;
  font-size: 14px;
}

.c13 .Calendar__day:not(.-blank):not(.-selected):hover {
  background: #f2fbfc !important;
}

.c13 .Calendar__day.-today:hover::after {
  opacity: 0.5 !important;
}

.c13 .selected-day {
  color: #353535 !important;
  border: 1px solid #bce7f6 !important;
}

.c13 .DatePicker__calendarContainer {
  position: absolute;
  top: unset;
  left: unset !important;
  right: 0 !important;
  -webkit-transform: unset !important;
  -ms-transform: unset !important;
  transform: unset !important;
}

.c15 {
  position: relative;
  width: 100%;
}

.c14 {
  width: 100%;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c9:last-child {
  margin-bottom: 0;
}

.c10 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c11 {
  color: #353535;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
        onClick={[Function]}
      >
        <div
          className="c3"
        >
          Manage Section
        </div>
        <button
          aria-label="Toggle expand section"
          className="c4 c5 c6 c7"
          onClick={[Function]}
          size={20}
          style={
            Object {
              "transform": "rotate(0deg)",
            }
          }
          type="button"
        >
          <svg
            height={20}
            viewBox="0 0 20 20"
            width={20}
          >
            <g
              fill="none"
              fillRule="evenodd"
              transform="matrix(1 0 0 -1 0 20)"
            >
              <circle
                cx={10}
                cy={10}
                r={9}
                stroke="#E2E2E2"
              />
              <path
                d="M6.505 10.974l3.548-3 3.652 2.96"
                stroke="#6E6E6E"
                strokeLinecap="round"
                strokeWidth={2}
              />
            </g>
          </svg>
        </button>
      </div>
      <div
        className="c8"
      >
        <div
          className="c9"
        >
          <div
            className="c10 c11"
          >
            Assignees
          </div>
          <button
            className="c12"
            onClick={[Function]}
          >
            <div
              data-for="addAssigneeTip"
              data-tip={true}
            >
              <svg
                fill="none"
                height="10"
                viewBox="0 0 11 10"
                width="11"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  clipRule="evenodd"
                  d="M5.5 0.5C5.25147 0.5 5.05 0.701472 5.05 0.95V4.55H1.45C1.20147 4.55 1 4.75147 1 5C1 5.24853 1.20147 5.45 1.45 5.45H5.05V9.05C5.05 9.29853 5.25147 9.5 5.5 9.5C5.74853 9.5 5.95 9.29853 5.95 9.05V5.45H9.55C9.79853 5.45 10 5.24853 10 5C10 4.75147 9.79853 4.55 9.55 4.55H5.95V0.95C5.95 0.701472 5.74853 0.5 5.5 0.5Z"
                  fill="#6E6E6E"
                  fillRule="evenodd"
                />
                <path
                  d="M5.05 4.55V5.05H5.55V4.55H5.05ZM5.05 5.45H5.55V4.95H5.05V5.45ZM5.95 5.45V4.95H5.45V5.45H5.95ZM5.95 4.55H5.45V5.05H5.95V4.55ZM5.55 0.95C5.55 0.977614 5.52761 1 5.5 1V0C4.97533 0 4.55 0.425329 4.55 0.95H5.55ZM5.55 4.55V0.95H4.55V4.55H5.55ZM1.45 5.05H5.05V4.05H1.45V5.05ZM1.5 5C1.5 5.02761 1.47761 5.05 1.45 5.05V4.05C0.925329 4.05 0.5 4.47533 0.5 5H1.5ZM1.45 4.95C1.47761 4.95 1.5 4.97239 1.5 5H0.5C0.5 5.52467 0.925328 5.95 1.45 5.95V4.95ZM5.05 4.95H1.45V5.95H5.05V4.95ZM5.55 9.05V5.45H4.55V9.05H5.55ZM5.5 9C5.52761 9 5.55 9.02239 5.55 9.05H4.55C4.55 9.57467 4.97533 10 5.5 10V9ZM5.45 9.05C5.45 9.02239 5.47239 9 5.5 9V10C6.02467 10 6.45 9.57467 6.45 9.05H5.45ZM5.45 5.45V9.05H6.45V5.45H5.45ZM9.55 4.95H5.95V5.95H9.55V4.95ZM9.5 5C9.5 4.97239 9.52238 4.95 9.55 4.95V5.95C10.0747 5.95 10.5 5.52467 10.5 5H9.5ZM9.55 5.05C9.52239 5.05 9.5 5.02761 9.5 5H10.5C10.5 4.47533 10.0747 4.05 9.55 4.05V5.05ZM5.95 5.05H9.55V4.05H5.95V5.05ZM5.45 0.95V4.55H6.45V0.95H5.45ZM5.5 1C5.47239 1 5.45 0.977615 5.45 0.95H6.45C6.45 0.425329 6.02467 0 5.5 0V1Z"
                  fill="#6E6E6E"
                />
              </svg>
            </div>
            <div />
          </button>
        </div>
        <div
          className="c9"
        >
          <div
            className="c10 c11"
          >
            Deadline
          </div>
          <div
            className="c13"
            selected={true}
          >
            <div />
          </div>
        </div>
        <div
          className="c9"
        >
          <div
            className="c10 c11"
          >
            Tags
          </div>
          <div
            className="c14"
          >
            <div
              className=" css-1akvy1b-container"
              onKeyDown={[Function]}
            >
              <div
                className=" css-sttxd2-control"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className=" css-g1d714-ValueContainer"
                >
                  <div
                    className=" css-1wa3eu0-placeholder"
                  >
                    Select...
                  </div>
                  <div
                    className="css-b8ldur-Input"
                  >
                    <div
                      className=""
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        disabled={false}
                        id="react-select-2-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "label": "input",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className=" css-1hb7zxy-IndicatorsContainer"
                >
                  <span
                    className=" css-1okebmr-indicatorSeparator"
                  />
                  <div
                    aria-hidden="true"
                    className=" css-tlfecz-indicatorContainer"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="css-6q0nyr-Svg"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div
          className="c9"
        >
          <div
            className="c10 c11"
          >
            Status
          </div>
          <div
            className="c15"
          >
            <div
              className=" css-1akvy1b-container"
              onKeyDown={[Function]}
            >
              <div
                className=" css-sttxd2-control"
                onMouseDown={[Function]}
                onTouchEnd={[Function]}
              >
                <div
                  className=" css-g1d714-ValueContainer"
                >
                  <div
                    className=" css-1wa3eu0-placeholder"
                  >
                    None
                  </div>
                  <div
                    className="css-b8ldur-Input"
                  >
                    <div
                      className=""
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <input
                        aria-autocomplete="list"
                        autoCapitalize="none"
                        autoComplete="off"
                        autoCorrect="off"
                        disabled={false}
                        id="react-select-3-input"
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        spellCheck="false"
                        style={
                          Object {
                            "background": 0,
                            "border": 0,
                            "boxSizing": "content-box",
                            "color": "inherit",
                            "fontSize": "inherit",
                            "label": "input",
                            "opacity": 1,
                            "outline": 0,
                            "padding": 0,
                            "width": "1px",
                          }
                        }
                        tabIndex="0"
                        type="text"
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className=" css-1hb7zxy-IndicatorsContainer"
                >
                  <span
                    className=" css-1okebmr-indicatorSeparator"
                  />
                  <div
                    aria-hidden="true"
                    className=" css-tlfecz-indicatorContainer"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <svg
                      aria-hidden="true"
                      className="css-6q0nyr-Svg"
                      focusable="false"
                      height={20}
                      viewBox="0 0 20 20"
                      width={20}
                    >
                      <path
                        d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                      />
                    </svg>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector tabs 1`] = `
.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1.c1 {
  background: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 14px;
  color: #353535;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c2.c2 {
  background: none;
  padding: 8px;
  border-bottom-width: 1px;
}

.c2.c2:focus {
  outline: none;
}

.c2.c2[data-selected] {
  border-bottom-color: #0d79d0;
  color: #0d79d0;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        data-orientation="horizontal"
        data-reach-tabs=""
      >
        <div
          aria-orientation="horizontal"
          className="c1"
          data-reach-tab-list=""
          onKeyDown={[Function]}
          role="tablist"
        >
          <button
            aria-controls="tabs--1--panel---1"
            aria-selected={false}
            className="c2"
            data-orientation="horizontal"
            data-reach-tab=""
            id="tabs--1--tab---1"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            role="tab"
            tabIndex={-1}
            type="button"
          >
            Tab 1
          </button>
          <button
            aria-controls="tabs--1--panel---1"
            aria-selected={false}
            className="c2"
            data-orientation="horizontal"
            data-reach-tab=""
            id="tabs--1--tab---1"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            role="tab"
            tabIndex={-1}
            type="button"
          >
            Tab 2
          </button>
          <button
            aria-controls="tabs--1--panel---1"
            aria-selected={false}
            className="c2"
            data-orientation="horizontal"
            data-reach-tab=""
            id="tabs--1--tab---1"
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            role="tab"
            tabIndex={-1}
            type="button"
          >
            Tab 3
          </button>
        </div>
        <div
          data-reach-tab-panels=""
        >
          <div
            aria-labelledby="tabs--1--tab---1"
            data-reach-tab-panel=""
            hidden={true}
            id="tabs--1--panel---1"
            role="tabpanel"
            tabIndex={-1}
          >
            Panel 1
          </div>
          <div
            aria-labelledby="tabs--1--tab---1"
            data-reach-tab-panel=""
            hidden={true}
            id="tabs--1--panel---1"
            role="tabpanel"
            tabIndex={-1}
          >
            Panel 2
          </div>
          <div
            aria-labelledby="tabs--1--tab---1"
            data-reach-tab-panel=""
            hidden={true}
            id="tabs--1--panel---1"
            role="tabpanel"
            tabIndex={-1}
          >
            Panel 3
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/History basic 1`] = `
.c15 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c15:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c15:hover {
  background-color: #f2fbfc;
}

.c15:invalid {
  box-shadow: none;
}

.c13 {
  position: relative;
}

.c13 .c14 {
  padding-left: 28px;
}

.c16 {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c2 svg + span {
  margin-left: 4px;
}

.c3 {
  border: none;
  color: #353535;
  padding: 0;
}

.c3 svg {
  max-height: 18px;
  max-width: 18px;
  margin-right: 12px;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c9 {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c4 {
  font-size: 14px;
  text-overflow: ellipsis;
  font-size: 16px;
}

.c4 svg {
  max-height: 36px;
  max-width: 36px;
}

.c4 svg {
  margin: 0;
}

.c4 svg path {
  -webkit-transition: fill 0.5s;
  transition: fill 0.5s;
}

.c4:focus svg path:first-of-type,
.c4:hover svg path:first-of-type {
  fill: #f7b314;
}

.c5 {
  padding-left: 12px;
}

.c7 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  padding: 16px 24px;
}

.c7::after {
  content: ' ';
  position: absolute;
  left: 33px;
  top: 42px;
  bottom: 0;
  border-left: 1px solid #e2e2e2;
}

.c10 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  margin-left: 8px;
}

.c11 {
  margin-top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12 {
  font-weight: 700;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c17 path {
  fill: #1a9bc7;
}

.c6 {
  border-color: #bce7f6 !important;
  border-top: 1px solid;
  border-bottom: 1px solid;
  background: #f2fbfc;
}

.c18 {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.c19 {
  position: relative;
}

.c1 {
  padding: 16px 24px;
}

.c20 {
  color: #0d79d0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c20.c20::after {
  content: ' ';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

<div
  className="c0"
>
  <div>
    <div>
      <div
        className="c1"
      >
        <button
          className="c2 c3 c4"
          onClick={[Function]}
          size="medium"
          type="button"
        >
          <svg
            className="AddButton__RegularAddIcon-x7a50a-0"
            height={40}
            viewBox="0 0 32 34"
            width={40}
          >
            <g
              fill="none"
              fillRule="evenodd"
            >
              <path
                d="M20.5 2.278l6 3.464a9 9 0 014.5 7.794v6.928a9 9 0 01-4.5 7.794l-6 3.464a9 9 0 01-9 0l-6-3.464A9 9 0 011 20.464v-6.928a9 9 0 014.5-7.794l6-3.464a9 9 0 019 0z"
                fill="#FFBD26"
              />
              <path
                d="M16.005 8.957a.75.75 0 01.75.75l-.001 6h6.001a.75.75 0 010 1.5h-6.001l.001 6a.75.75 0 01-1.5 0l-.001-6H9.255a.75.75 0 110-1.5h5.999l.001-6a.75.75 0 01.75-.75z"
                fill="#FFF"
                stroke="#FFF"
              />
            </g>
          </svg>
          <div
            className="c5"
          >
            New Version
          </div>
        </button>
      </div>
      <form
        className="c6"
        onSubmit={[Function]}
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <img
              className="c9"
              onError={[Function]}
              size={20}
              src="//user-1/image"
            />
          </div>
          <div
            className="c10"
          >
            <p
              className="c11"
            >
              <span
                className="c12"
              >
                <span>
                  New Snapshot
                </span>
              </span>
            </p>
            <div
              className="c13"
            >
              <input
                className="c14 c15"
                id="snapshot-name"
                onChange={[Function]}
                placeholder="Add Title"
                value=""
              />
              <div
                className="c16"
              >
                <svg
                  className="c17"
                  height={20}
                  viewBox="0 0 21 20"
                  width={21}
                >
                  <path
                    d="M12.706 5.336l2.847 2.862-7.208 7.244-2.847-2.861 7.208-7.245zm5.008-.69l-1.27-1.276a1.256 1.256 0 00-1.78 0l-1.217 1.222 2.848 2.862 1.42-1.426a.98.98 0 000-1.382zM4.008 16.603a.325.325 0 00.392.388l3.173-.774-2.846-2.862-.72 3.248z"
                    fill="#6E6E6E"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </form>
      <ul
        className="c18"
      >
        <li
          className="c19"
        >
          <div
            className="c7"
          >
            <div
              className="c8"
            >
              <img
                className="c9"
                onError={[Function]}
                size={20}
                src="//Egon Spengler/image"
              />
            </div>
            <div
              className="c10"
            >
              <p
                className="c11"
              >
                <span
                  className="c12"
                >
                  <span>
                    MOCK_FORMATTED_DATETIME
                  </span>
                </span>
                <a
                  className="c20"
                  href="/"
                  onClick={[Function]}
                >
                  View
                </a>
              </p>
              <p>
                My Snapshot
              </p>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/History error while saving 1`] = `
.c15 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c15:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c15:hover {
  background-color: #f2fbfc;
}

.c15:invalid {
  box-shadow: none;
}

.c13 {
  position: relative;
}

.c13 .c14 {
  padding-left: 28px;
}

.c16 {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c2 svg + span {
  margin-left: 4px;
}

.c19 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  padding: 3px 16px;
  margin: 0 4px;
  line-height: 1;
}

.c19 svg + span {
  margin-left: 4px;
}

.c20 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c20:not([disabled]):hover,
.c20:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c20:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c3 {
  border: none;
  color: #353535;
  padding: 0;
}

.c3 svg {
  max-height: 18px;
  max-width: 18px;
  margin-right: 12px;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c9 {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c4 {
  font-size: 14px;
  text-overflow: ellipsis;
  font-size: 16px;
}

.c4 svg {
  max-height: 36px;
  max-width: 36px;
}

.c4 svg {
  margin: 0;
}

.c4 svg path {
  -webkit-transition: fill 0.5s;
  transition: fill 0.5s;
}

.c4:focus svg path:first-of-type,
.c4:hover svg path:first-of-type {
  fill: #f7b314;
}

.c5 {
  padding-left: 12px;
}

.c7 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  padding: 16px 24px;
}

.c7::after {
  content: ' ';
  position: absolute;
  left: 33px;
  top: 42px;
  bottom: 0;
  border-left: 1px solid #e2e2e2;
}

.c10 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  margin-left: 8px;
}

.c11 {
  margin-top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12 {
  font-weight: 700;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c17 path {
  fill: #1a9bc7;
}

.c18 {
  color: #f35143;
  font-size: 0.8rem;
}

.c6 {
  border-color: #bce7f6 !important;
  border-top: 1px solid;
  border-bottom: 1px solid;
  background: #f2fbfc;
}

.c21 {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.c22 {
  position: relative;
}

.c1 {
  padding: 16px 24px;
}

.c23 {
  color: #0d79d0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c23.c23::after {
  content: ' ';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

<div
  className="c0"
>
  <div>
    <div>
      <div
        className="c1"
      >
        <button
          className="c2 c3 c4"
          onClick={[Function]}
          size="medium"
          type="button"
        >
          <svg
            className="AddButton__RegularAddIcon-x7a50a-0"
            height={40}
            viewBox="0 0 32 34"
            width={40}
          >
            <g
              fill="none"
              fillRule="evenodd"
            >
              <path
                d="M20.5 2.278l6 3.464a9 9 0 014.5 7.794v6.928a9 9 0 01-4.5 7.794l-6 3.464a9 9 0 01-9 0l-6-3.464A9 9 0 011 20.464v-6.928a9 9 0 014.5-7.794l6-3.464a9 9 0 019 0z"
                fill="#FFBD26"
              />
              <path
                d="M16.005 8.957a.75.75 0 01.75.75l-.001 6h6.001a.75.75 0 010 1.5h-6.001l.001 6a.75.75 0 01-1.5 0l-.001-6H9.255a.75.75 0 110-1.5h5.999l.001-6a.75.75 0 01.75-.75z"
                fill="#FFF"
                stroke="#FFF"
              />
            </g>
          </svg>
          <div
            className="c5"
          >
            New Version
          </div>
        </button>
      </div>
      <form
        className="c6"
        onSubmit={[Function]}
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <img
              className="c9"
              onError={[Function]}
              size={20}
              src="//user-1/image"
            />
          </div>
          <div
            className="c10"
          >
            <p
              className="c11"
            >
              <span
                className="c12"
              >
                <span>
                  New Snapshot
                </span>
              </span>
            </p>
            <div
              className="c13"
            >
              <input
                className="c14 c15"
                id="snapshot-name"
                onChange={[Function]}
                placeholder="Add Title"
                value=""
              />
              <div
                className="c16"
              >
                <svg
                  className="c17"
                  height={20}
                  viewBox="0 0 21 20"
                  width={21}
                >
                  <path
                    d="M12.706 5.336l2.847 2.862-7.208 7.244-2.847-2.861 7.208-7.245zm5.008-.69l-1.27-1.276a1.256 1.256 0 00-1.78 0l-1.217 1.222 2.848 2.862 1.42-1.426a.98.98 0 000-1.382zM4.008 16.603a.325.325 0 00.392.388l3.173-.774-2.846-2.862-.72 3.248z"
                    fill="#6E6E6E"
                  />
                </svg>
              </div>
            </div>
            <div
              className="c18"
            >
              <span>
                There was an error saving your snapshot.
              </span>
            </div>
            <button
              className="c19 c20"
              onClick={[Function]}
              type="button"
            >
              Retry
            </button>
          </div>
        </div>
      </form>
      <ul
        className="c21"
      >
        <li
          className="c22"
        >
          <div
            className="c7"
          >
            <div
              className="c8"
            >
              <img
                className="c9"
                onError={[Function]}
                size={20}
                src="//Egon Spengler/image"
              />
            </div>
            <div
              className="c10"
            >
              <p
                className="c11"
              >
                <span
                  className="c12"
                >
                  <span>
                    MOCK_FORMATTED_DATETIME
                  </span>
                </span>
                <a
                  className="c23"
                  href="/"
                  onClick={[Function]}
                >
                  View
                </a>
              </p>
              <p>
                My Snapshot
              </p>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/History read only 1`] = `
.c4 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c5 {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c3 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  padding: 16px 24px;
}

.c3::after {
  content: ' ';
  position: absolute;
  left: 33px;
  top: 42px;
  bottom: 0;
  border-left: 1px solid #e2e2e2;
}

.c6 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  margin-left: 8px;
}

.c7 {
  margin-top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 {
  font-weight: 700;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c1 {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.c2 {
  position: relative;
}

.c9 {
  color: #0d79d0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c9.c9::after {
  content: ' ';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

<div
  className="c0"
>
  <div>
    <div>
      <ul
        className="c1"
      >
        <li
          className="c2"
        >
          <div
            className="c3"
          >
            <div
              className="c4"
            >
              <img
                className="c5"
                onError={[Function]}
                size={20}
                src="//Egon Spengler/image"
              />
            </div>
            <div
              className="c6"
            >
              <p
                className="c7"
              >
                <span
                  className="c8"
                >
                  <span>
                    MOCK_FORMATTED_DATETIME
                  </span>
                </span>
                <a
                  className="c9"
                  href="/"
                  onClick={[Function]}
                >
                  View
                </a>
              </p>
              <p>
                My Snapshot
              </p>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/History while saving 1`] = `
.c15 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c15:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c15:hover {
  background-color: #f2fbfc;
}

.c15:invalid {
  box-shadow: none;
}

.c13 {
  position: relative;
}

.c13 .c14 {
  padding-left: 28px;
}

.c16 {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
}

.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c2 svg + span {
  margin-left: 4px;
}

.c3 {
  border: none;
  color: #353535;
  padding: 0;
}

.c3 svg {
  max-height: 18px;
  max-width: 18px;
  margin-right: 12px;
}

.c8 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  position: relative;
}

.c9 {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c4 {
  font-size: 14px;
  text-overflow: ellipsis;
  font-size: 16px;
}

.c4 svg {
  max-height: 36px;
  max-width: 36px;
}

.c4 svg {
  margin: 0;
}

.c4 svg path {
  -webkit-transition: fill 0.5s;
  transition: fill 0.5s;
}

.c4:focus svg path:first-of-type,
.c4:hover svg path:first-of-type {
  fill: #f7b314;
}

.c5 {
  padding-left: 12px;
}

.c7 {
  position: relative;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  padding: 16px 24px;
}

.c7::after {
  content: ' ';
  position: absolute;
  left: 33px;
  top: 42px;
  bottom: 0;
  border-left: 1px solid #e2e2e2;
}

.c10 {
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  margin-left: 8px;
}

.c11 {
  margin-top: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12 {
  font-weight: 700;
  -webkit-box-flex: 1;
  -webkit-flex-grow: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
}

.c17 path {
  fill: #1a9bc7;
}

.c6 {
  border-color: #bce7f6 !important;
  border-top: 1px solid;
  border-bottom: 1px solid;
  background: #f2fbfc;
}

.c18 {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

.c19 {
  position: relative;
}

.c1 {
  padding: 16px 24px;
}

.c20 {
  color: #0d79d0;
  -webkit-text-decoration: none;
  text-decoration: none;
}

.c20.c20::after {
  content: ' ';
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
}

<div
  className="c0"
>
  <div>
    <div>
      <div
        className="c1"
      >
        <button
          className="c2 c3 c4"
          onClick={[Function]}
          size="medium"
          type="button"
        >
          <svg
            className="AddButton__RegularAddIcon-x7a50a-0"
            height={40}
            viewBox="0 0 32 34"
            width={40}
          >
            <g
              fill="none"
              fillRule="evenodd"
            >
              <path
                d="M20.5 2.278l6 3.464a9 9 0 014.5 7.794v6.928a9 9 0 01-4.5 7.794l-6 3.464a9 9 0 01-9 0l-6-3.464A9 9 0 011 20.464v-6.928a9 9 0 014.5-7.794l6-3.464a9 9 0 019 0z"
                fill="#FFBD26"
              />
              <path
                d="M16.005 8.957a.75.75 0 01.75.75l-.001 6h6.001a.75.75 0 010 1.5h-6.001l.001 6a.75.75 0 01-1.5 0l-.001-6H9.255a.75.75 0 110-1.5h5.999l.001-6a.75.75 0 01.75-.75z"
                fill="#FFF"
                stroke="#FFF"
              />
            </g>
          </svg>
          <div
            className="c5"
          >
            New Version
          </div>
        </button>
      </div>
      <form
        className="c6"
        onSubmit={[Function]}
      >
        <div
          className="c7"
        >
          <div
            className="c8"
          >
            <img
              className="c9"
              onError={[Function]}
              size={20}
              src="//user-1/image"
            />
          </div>
          <div
            className="c10"
          >
            <p
              className="c11"
            >
              <span
                className="c12"
              >
                <span>
                  New Snapshot
                </span>
              </span>
            </p>
            <div
              className="c13"
            >
              <input
                className="c14 c15"
                id="snapshot-name"
                onChange={[Function]}
                placeholder="Add Title"
                value=""
              />
              <div
                className="c16"
              >
                <svg
                  className="c17"
                  height={20}
                  viewBox="0 0 21 20"
                  width={21}
                >
                  <path
                    d="M12.706 5.336l2.847 2.862-7.208 7.244-2.847-2.861 7.208-7.245zm5.008-.69l-1.27-1.276a1.256 1.256 0 00-1.78 0l-1.217 1.222 2.848 2.862 1.42-1.426a.98.98 0 000-1.382zM4.008 16.603a.325.325 0 00.392.388l3.173-.774-2.846-2.862-.72 3.248z"
                    fill="#6E6E6E"
                  />
                </svg>
              </div>
            </div>
          </div>
        </div>
      </form>
      <ul
        className="c18"
      >
        <li
          className="c19"
        >
          <div
            className="c7"
          >
            <div
              className="c8"
            >
              <img
                className="c9"
                onError={[Function]}
                size={20}
                src="//Egon Spengler/image"
              />
            </div>
            <div
              className="c10"
            >
              <p
                className="c11"
              >
                <span
                  className="c12"
                >
                  <span>
                    MOCK_FORMATTED_DATETIME
                  </span>
                </span>
                <a
                  className="c20"
                  href="/"
                  onClick={[Function]}
                >
                  View
                </a>
              </p>
              <p>
                My Snapshot
              </p>
            </div>
          </div>
        </li>
      </ul>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Manuscript Inspector without requirements 1`] = `
.c22 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c22:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c22:hover {
  background-color: #f2fbfc;
}

.c22:invalid {
  box-shadow: none;
}

.c20 {
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
  max-width: 100%;
}

.c20:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c20:hover {
  background-color: #f2fbfc;
}

.c20:invalid {
  box-shadow: none;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

.c10.c10 {
  background: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 14px;
  color: #353535;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c11 {
  margin-bottom: 16px;
}

.c13 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow-y: auto;
}

.c14 {
  font-size: 14px;
  color: #6e6e6e;
}

.c12.c12 {
  background: none;
  padding: 8px;
  border-bottom-width: 1px;
}

.c12.c12:focus {
  outline: none;
}

.c12.c12[data-selected] {
  border-bottom-color: #0d79d0;
  color: #0d79d0;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c15 {
  font-size: 14px;
  font-weight: 400;
  margin-bottom: 12px;
}

.c15:not(:first-child) {
  margin-top: 24px;
}

.c8 {
  margin: 8px 8px 32px;
}

.c28 {
  width: 100px;
  padding: 4px 8px;
  font-size: 1em;
}

.c23 {
  padding: 8px;
  font-size: 1em;
}

.c21 {
  padding: 8px;
  font-size: 1em;
}

.c27 {
  margin-right: 8px;
}

.c18 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c18:last-child {
  margin-bottom: 0;
}

.c24 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c25 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 8px;
}

.c25:last-child {
  margin-bottom: 0;
}

.c26 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c19 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c19 .{
  margin-right: 8px;
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c17 {
  height: 24px;
}

.c17 .react-datetime-picker__wrapper {
  border: none;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c17 .react-datetime-picker__clear-button {
  display: none;
}

.c17:hover .react-datetime-picker__clear-button {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

.c17 .react-datetime-picker__clear-button svg {
  stroke: #bbb;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Manuscript
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
            data-orientation="horizontal"
            data-reach-tabs=""
          >
            <div
              aria-orientation="horizontal"
              className="c10 c11"
              data-reach-tab-list=""
              onKeyDown={[Function]}
              role="tablist"
            >
              <button
                aria-controls="tabs--3--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--3--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Metadata
              </button>
              <button
                aria-controls="tabs--3--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--3--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Labels
              </button>
              <button
                aria-controls="tabs--3--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--3--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Requirements
              </button>
            </div>
            <div
              className="c13"
              data-reach-tab-panels=""
            >
              <div
                aria-labelledby="tabs--3--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--3--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c3 c15"
                >
                  Publication Date
                </div>
                <div
                  className="c16"
                >
                  <div
                    className="react-datetime-picker react-datetime-picker--closed react-datetime-picker--enabled c17"
                    onFocus={[Function]}
                  >
                    <div
                      className="react-datetime-picker__wrapper"
                    >
                      <div
                        className="react-datetime-picker__inputGroup"
                        onClick={[Function]}
                      >
                        <input
                          max="275760-09-13T00:00"
                          min="0001-01-01T00:00"
                          name="datetime"
                          onChange={[Function]}
                          onFocus={[Function]}
                          step={60}
                          style={
                            Object {
                              "position": "absolute",
                              "visibility": "hidden",
                              "zIndex": "-999",
                            }
                          }
                          type="datetime-local"
                          value=""
                        />
                        
                        <input
                          autoComplete="off"
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__month"
                          data-input="true"
                          inputMode="numeric"
                          max={12}
                          min={1}
                          name="month"
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onKeyUp={[Function]}
                          placeholder="--"
                          required={null}
                          type="number"
                          value=""
                        />
                        <span
                          className="react-datetime-picker__inputGroup__divider"
                        >
                          /
                        </span>
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__day"
                          data-input="true"
                          inputMode="numeric"
                          max={31}
                          min={1}
                          name="day"
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onKeyUp={[Function]}
                          placeholder="--"
                          required={null}
                          type="number"
                          value=""
                        />
                        <span
                          className="react-datetime-picker__inputGroup__divider"
                        >
                          /
                        </span>
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__year"
                          data-input="true"
                          inputMode="numeric"
                          max={275760}
                          min={1}
                          name="year"
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onKeyUp={[Function]}
                          placeholder="----"
                          required={null}
                          step={1}
                          type="number"
                          value=""
                        />
                        <span
                          className="react-datetime-picker__inputGroup__divider"
                        >
                           
                        </span>
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__hour"
                          data-input="true"
                          inputMode="numeric"
                          max={12}
                          min={1}
                          name="hour12"
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onKeyUp={[Function]}
                          placeholder="--"
                          required={null}
                          type="number"
                          value=""
                        />
                        <span
                          className="react-datetime-picker__inputGroup__divider"
                        >
                          :
                        </span>
                        <input
                          autoComplete="off"
                          autoFocus={false}
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__minute"
                          data-input="true"
                          inputMode="numeric"
                          max={59}
                          min={0}
                          name="minute"
                          onChange={[Function]}
                          onFocus={[Function]}
                          onKeyDown={[Function]}
                          onKeyPress={[Function]}
                          onKeyUp={[Function]}
                          placeholder="--"
                          required={null}
                          type="number"
                          value=""
                        />
                        <span
                          className="react-datetime-picker__inputGroup__divider"
                        >
                           
                        </span>
                        <select
                          className="react-datetime-picker__inputGroup__input react-datetime-picker__inputGroup__amPm"
                          name="amPm"
                          onChange={[Function]}
                          required={null}
                          value=""
                        >
                          <option
                            value=""
                          >
                            --
                          </option>
                          <option
                            value="am"
                          >
                            AM
                          </option>
                          <option
                            value="pm"
                          >
                            PM
                          </option>
                        </select>
                        
                      </div>
                      <button
                        className="react-datetime-picker__clear-button react-datetime-picker__button"
                        onClick={[Function]}
                        onFocus={[Function]}
                        type="button"
                      >
                        <svg
                          className="react-datetime-picker__clear-button__icon react-datetime-picker__button__icon"
                          height={19}
                          stroke="black"
                          strokeWidth={2}
                          viewBox="0 0 19 19"
                          width={19}
                          xmlns="http://www.w3.org/2000/svg"
                        >
                          <line
                            x1="4"
                            x2="15"
                            y1="4"
                            y2="15"
                          />
                          <line
                            x1="15"
                            x2="4"
                            y1="4"
                            y2="15"
                          />
                        </svg>
                      </button>
                    </div>
                  </div>
                </div>
                <div
                  className="c3 c15"
                >
                  Paywall
                </div>
                <div
                  className="c18"
                >
                  <label
                    className="c19"
                  >
                    <input
                      checked={false}
                      className=""
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Publish behind a paywall
                  </label>
                </div>
                <div
                  className="c3 c15"
                >
                  Abstract
                </div>
                <textarea
                  className="c20 c21"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  rows={5}
                  value=""
                />
                <div
                  className="c3 c15"
                >
                  Theme
                </div>
                <div
                  className=" css-1akvy1b-container"
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-sttxd2-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className=" css-g1d714-ValueContainer"
                    >
                      <div
                        className=" css-1wa3eu0-placeholder"
                      >
                        Select...
                      </div>
                      <div
                        className="css-b8ldur-Input"
                      >
                        <div
                          className=""
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={false}
                            id="react-select-4-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className=" css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className=" css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className=" css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-6q0nyr-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="c3 c15"
                >
                  Keywords
                </div>
                <div
                  className=" css-1akvy1b-container"
                  onKeyDown={[Function]}
                >
                  <div
                    className=" css-sttxd2-control"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                  >
                    <div
                      className=" css-g1d714-ValueContainer"
                    >
                      <div
                        className=" css-1wa3eu0-placeholder"
                      >
                        Select...
                      </div>
                      <div
                        className="css-b8ldur-Input"
                      >
                        <div
                          className=""
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <input
                            aria-autocomplete="list"
                            autoCapitalize="none"
                            autoComplete="off"
                            autoCorrect="off"
                            disabled={false}
                            id="react-select-5-input"
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            spellCheck="false"
                            style={
                              Object {
                                "background": 0,
                                "border": 0,
                                "boxSizing": "content-box",
                                "color": "inherit",
                                "fontSize": "inherit",
                                "label": "input",
                                "opacity": 1,
                                "outline": 0,
                                "padding": 0,
                                "width": "1px",
                              }
                            }
                            tabIndex="0"
                            type="text"
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      className=" css-1hb7zxy-IndicatorsContainer"
                    >
                      <span
                        className=" css-1okebmr-indicatorSeparator"
                      />
                      <div
                        aria-hidden="true"
                        className=" css-tlfecz-indicatorContainer"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                      >
                        <svg
                          aria-hidden="true"
                          className="css-6q0nyr-Svg"
                          focusable="false"
                          height={20}
                          viewBox="0 0 20 20"
                          width={20}
                        >
                          <path
                            d="M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z"
                          />
                        </svg>
                      </div>
                    </div>
                  </div>
                </div>
                <div
                  className="c3 c15"
                >
                  Author Instruction URL
                </div>
                <input
                  className="c22 c23"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  placeholder="https://…"
                  type="text"
                  value=""
                />
              </div>
              <div
                aria-labelledby="tabs--3--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--3--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c18"
                >
                  <div
                    className="c24"
                  >
                    Figure Panel
                  </div>
                  <input
                    className="c22 c23"
                    onChange={[Function]}
                    placeholder="Figure"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="c18"
                >
                  <div
                    className="c24"
                  >
                    Table
                  </div>
                  <input
                    className="c22 c23"
                    onChange={[Function]}
                    placeholder="Table"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="c18"
                >
                  <div
                    className="c24"
                  >
                    Equation
                  </div>
                  <input
                    className="c22 c23"
                    onChange={[Function]}
                    placeholder="Equation"
                    type="text"
                    value=""
                  />
                </div>
                <div
                  className="c18"
                >
                  <div
                    className="c24"
                  >
                    Listing
                  </div>
                  <input
                    className="c22 c23"
                    onChange={[Function]}
                    placeholder="Listing"
                    type="text"
                    value=""
                  />
                </div>
              </div>
              <div
                aria-labelledby="tabs--3--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--3--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c25"
                >
                  <label
                    className="c26"
                  >
                    <input
                      checked={false}
                      className="c27"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Min word count
                  </label>
                  <input
                    className="c22 c28"
                    disabled={true}
                    min={1}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    pattern="[0-9]+"
                    placeholder="Minimum"
                    step={1}
                    type="number"
                    value=""
                  />
                </div>
                <div
                  className="c25"
                >
                  <label
                    className="c26"
                  >
                    <input
                      checked={false}
                      className="c27"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Max word count
                  </label>
                  <input
                    className="c22 c28"
                    disabled={true}
                    min={1}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    pattern="[0-9]+"
                    placeholder="Maximum"
                    step={1}
                    type="number"
                    value=""
                  />
                </div>
                <div
                  className="c25"
                >
                  <label
                    className="c26"
                  >
                    <input
                      checked={false}
                      className="c27"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Min character count
                  </label>
                  <input
                    className="c22 c28"
                    disabled={true}
                    min={1}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    pattern="[0-9]+"
                    placeholder="Minimum"
                    step={1}
                    type="number"
                    value=""
                  />
                </div>
                <div
                  className="c25"
                >
                  <label
                    className="c26"
                  >
                    <input
                      checked={false}
                      className="c27"
                      onChange={[Function]}
                      type="checkbox"
                    />
                    Max character count
                  </label>
                  <input
                    className="c22 c28"
                    disabled={true}
                    min={1}
                    onBlur={[Function]}
                    onChange={[Function]}
                    onFocus={[Function]}
                    pattern="[0-9]+"
                    placeholder="Maximum"
                    step={1}
                    type="number"
                    value=""
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Manuscript Style Inspector with bundle 1`] = `
.c12 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c12:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c12:hover {
  background-color: #f2fbfc;
}

.c12:invalid {
  box-shadow: none;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  padding: 3px 16px;
  margin: 0 4px;
  line-height: 1;
}

.c14 svg + span {
  margin-left: 4px;
}

.c15 {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c15:not([disabled]):hover,
.c15:not([disabled]):focus {
  color: #0d79d0;
  background-color: #f2fbfc;
  border-color: #f2fbfc;
}

.c15:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c8 {
  margin: 8px 8px 32px;
}

.c13 {
  border-right: 0;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  cursor: pointer;
  font-size: 14px;
  overflow: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  text-overflow: ellipsis;
}

.c16 {
  border-left: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  border-left: 1px solid;
  border-color: #e2e2e2 !important;
  margin: 0;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c9:last-child {
  margin-bottom: 0;
}

.c10 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c11 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Manuscript
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              Citation Style
            </div>
            <div
              className="c11"
              onClick={[Function]}
            >
              <input
                className="c12 c13"
                readOnly={true}
                value="Nature"
              />
              <button
                className="c14 c15 c16"
                type="button"
              >
                Choose
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Manuscript Style Inspector without bundle 1`] = `
.c12 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c12:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c12:hover {
  background-color: #f2fbfc;
}

.c12:invalid {
  box-shadow: none;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c14 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
  padding: 3px 16px;
  margin: 0 4px;
  line-height: 1;
}

.c14 svg + span {
  margin-left: 4px;
}

.c15 {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c15:not([disabled]):hover,
.c15:not([disabled]):focus {
  color: #0d79d0;
  background-color: #f2fbfc;
  border-color: #f2fbfc;
}

.c15:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c8 {
  margin: 8px 8px 32px;
}

.c13 {
  border-right: 0;
  border-bottom-right-radius: 0;
  border-top-right-radius: 0;
  cursor: pointer;
  font-size: 14px;
  overflow: hidden;
  padding-bottom: 2px;
  padding-top: 2px;
  text-overflow: ellipsis;
}

.c16 {
  border-left: 0;
  border-bottom-left-radius: 0;
  border-top-left-radius: 0;
  border-left: 1px solid;
  border-color: #e2e2e2 !important;
  margin: 0;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c9:last-child {
  margin-bottom: 0;
}

.c10 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c11 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Manuscript
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c10"
            >
              Citation Style
            </div>
            <div
              className="c11"
              onClick={[Function]}
            >
              <input
                className="c12 c13"
                readOnly={true}
                value=""
              />
              <button
                className="c14 c15 c16"
                type="button"
              >
                Choose
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Paragraph Styles with bundle 1`] = `
.c19 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c19:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c19:hover {
  background-color: #f2fbfc;
}

.c19:invalid {
  box-shadow: none;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c23 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 2px;
  cursor: pointer;
  line-height: 0;
  font-size: 16px;
}

.c23:hover {
  border-color: #e2e2e2;
}

.c23:focus {
  outline: none;
}

.c22 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

.c13.c13 {
  background: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 14px;
  color: #353535;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c14 {
  margin-bottom: 16px;
}

.c16 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow-y: auto;
}

.c17 {
  font-size: 14px;
  color: #6e6e6e;
}

.c15.c15 {
  background: none;
  padding: 8px;
  border-bottom-width: 1px;
}

.c15.c15:focus {
  outline: none;
}

.c15.c15[data-selected] {
  border-bottom-color: #0d79d0;
  color: #0d79d0;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c8 {
  margin: 8px 8px 32px;
}

.c20 {
  width: 50px;
  padding: 2px 8px;
  margin-right: 8px;
  font-size: 0.75em;
}

.c10 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c9:last-child {
  margin-bottom: 0;
}

.c18 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c21 {
  font-weight: 400;
  font-size: inherit;
  border: none;
  border-radius: 50%;
  background: none;
  padding: 0 8px;
  cursor: pointer;
}

.c11 {
  border: none;
  background: #fff;
  cursor: pointer;
  margin: 0 8px;
}

.c11:focus {
  outline: none;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Paragraph Styles
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <select
              className="c10"
              onChange={[Function]}
              value="MPParagraphStyle:7EAB5784-717B-4672-BD59-8CA324FB0637"
            >
              <option
                value="MPParagraphStyle:7EAB5784-717B-4672-BD59-8CA324FB0637"
              >
                Body Text
              </option>
            </select>
            <button
              className="c11"
              onClick={[Function]}
              type="button"
            >
              <svg
                height={12}
                viewBox="0 0 4 20"
                width={4}
              >
                <g
                  fill="#1A9BC7"
                  fillRule="evenodd"
                >
                  <rect
                    height={4}
                    rx={2}
                    width={4}
                  />
                  <rect
                    height={4}
                    rx={2}
                    width={4}
                    y={8}
                  />
                  <rect
                    height={4}
                    rx={2}
                    width={4}
                    y={16}
                  />
                </g>
              </svg>
            </button>
          </div>
          <div
            className="c12"
            data-orientation="horizontal"
            data-reach-tabs=""
          >
            <div
              aria-orientation="horizontal"
              className="c13 c14"
              data-reach-tab-list=""
              onKeyDown={[Function]}
              role="tablist"
            >
              <button
                aria-controls="tabs--4--panel---1"
                aria-selected={false}
                className="c15"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--4--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Text
              </button>
              <button
                aria-controls="tabs--4--panel---1"
                aria-selected={false}
                className="c15"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--4--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Spacing
              </button>
              <button
                aria-controls="tabs--4--panel---1"
                aria-selected={false}
                className="c15"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--4--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Lists
              </button>
            </div>
            <div
              className="c16"
              data-reach-tab-panels=""
            >
              <div
                aria-labelledby="tabs--4--tab---1"
                className="c17"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--4--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c9"
                >
                  <div
                    className="c18"
                  >
                    Size
                  </div>
                  <input
                    className="c19 c20"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  pt
                </div>
                <div
                  className="c9"
                >
                  <div
                    className="c18"
                  >
                    Style
                  </div>
                  <button
                    className="c21"
                    onMouseDown={[Function]}
                    type="button"
                  >
                    B
                  </button>
                  <button
                    className="c21"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "fontStyle": "italic",
                      }
                    }
                    type="button"
                  >
                    I
                  </button>
                </div>
                <div
                  className="c9"
                >
                  <div
                    className="c18"
                  >
                    Color
                  </div>
                  <div
                    className="c22"
                  >
                    <button
                      className="c23"
                      onClick={[Function]}
                      type="button"
                    >
                      +
                    </button>
                  </div>
                </div>
              </div>
              <div
                aria-labelledby="tabs--4--tab---1"
                className="c17"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--4--panel---1"
                role="tabpanel"
                tabIndex={-1}
              />
              <div
                aria-labelledby="tabs--4--tab---1"
                className="c17"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--4--panel---1"
                role="tabpanel"
                tabIndex={-1}
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Section Styles with bundle 1`] = `
.c25 input {
  border: 0;
  -webkit-clip: rect(0 0 0 0);
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

.c25 div {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: #6e6e6e;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  line-height: 16px;
  margin: 16px 0 8px;
}

.c25 div::before {
  content: ' ';
  display: inline-block;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 16px;
  height: 16px;
  border: 1px solid #6e6e6e;
  border-radius: 4px;
  margin-right: 1em;
  text-align: center;
}

.c25 input:checked + div::before {
  background: #0d79d0;
  border-color: #0d79d0;
  color: white;
  content: '✓';
}

.c25 input:focus + div::before {
  border-color: #0b6bb8;
}

.c17 {
  display: block;
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-sizing: border-box;
  font: 400 16px / 1 "Lato",sans-serif;
  outline: none;
  padding: 10px 16px;
  position: relative;
  width: 100%;
}

.c17:focus {
  border-color: #bce7f6;
  background-color: #f2fbfc;
}

.c17:hover {
  background-color: #f2fbfc;
}

.c17:invalid {
  box-shadow: none;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c21 {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 2px;
  cursor: pointer;
  line-height: 0;
  font-size: 16px;
}

.c21:hover {
  border-color: #e2e2e2;
}

.c21:focus {
  outline: none;
}

.c20 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c9 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  height: 100%;
  overflow: hidden;
}

.c10.c10 {
  background: none;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  font-size: 14px;
  color: #353535;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c11 {
  margin-bottom: 16px;
}

.c13 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  overflow-y: auto;
}

.c14 {
  font-size: 14px;
  color: #6e6e6e;
}

.c12.c12 {
  background: none;
  padding: 8px;
  border-bottom-width: 1px;
}

.c12.c12:focus {
  outline: none;
}

.c12.c12[data-selected] {
  border-bottom-color: #0d79d0;
  color: #0d79d0;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c8 {
  margin: 8px 8px 32px;
}

.c18 {
  width: 50px;
  padding: 2px 8px;
  margin-right: 8px;
  font-size: 0.75em;
}

.c24 {
  width: 25px;
  padding: 2px 4px;
  margin-right: 4px;
  font-size: 0.75em;
}

.c23 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  margin-right: 8px;
}

.c22 {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  width: 100%;
  margin-bottom: 16px;
}

.c15:last-child {
  margin-bottom: 0;
}

.c16 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 100px;
  color: #6e6e6e;
}

.c19 {
  font-weight: 400;
  font-size: inherit;
  border: none;
  border-radius: 50%;
  background: none;
  padding: 0 8px;
  cursor: pointer;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Section Heading Styles
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
            data-orientation="horizontal"
            data-reach-tabs=""
          >
            <div
              aria-orientation="horizontal"
              className="c10 c11"
              data-reach-tab-list=""
              onKeyDown={[Function]}
              role="tablist"
            >
              <button
                aria-controls="tabs--5--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--5--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Text
              </button>
              <button
                aria-controls="tabs--5--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--5--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Spacing
              </button>
              <button
                aria-controls="tabs--5--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--5--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Numbering
              </button>
              <button
                aria-controls="tabs--5--panel---1"
                aria-selected={false}
                className="c12"
                data-orientation="horizontal"
                data-reach-tab=""
                id="tabs--5--tab---1"
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                role="tab"
                tabIndex={-1}
                type="button"
              >
                Options
              </button>
            </div>
            <div
              className="c13"
              data-reach-tab-panels=""
            >
              <div
                aria-labelledby="tabs--5--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--5--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Size
                  </div>
                  <input
                    className="c17 c18"
                    onChange={[Function]}
                    type="number"
                    value={12}
                  />
                  pt
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Style
                  </div>
                  <button
                    className="c19"
                    onMouseDown={[Function]}
                    type="button"
                  >
                    B
                  </button>
                  <button
                    className="c19"
                    onMouseDown={[Function]}
                    style={
                      Object {
                        "fontStyle": "italic",
                      }
                    }
                    type="button"
                  >
                    I
                  </button>
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Color
                  </div>
                  <div
                    className="c20"
                  >
                    <button
                      className="c21"
                      onClick={[Function]}
                      type="button"
                    >
                      +
                    </button>
                  </div>
                </div>
              </div>
              <div
                aria-labelledby="tabs--5--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--5--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Alignment
                  </div>
                  <select
                    className="c22"
                    onChange={[Function]}
                    value="left"
                  >
                    <option
                      value="left"
                    >
                      Left
                    </option>
                    <option
                      value="center"
                    >
                      Center
                    </option>
                    <option
                      value="right"
                    >
                      Right
                    </option>
                    <option
                      value="justify"
                    >
                      Justify
                    </option>
                  </select>
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Top spacing
                  </div>
                  <input
                    className="c23"
                    list="topSpacingList"
                    max={40}
                    min={0}
                    name="top-spacing"
                    onChange={[Function]}
                    step={2}
                    type="range"
                    value={10}
                  />
                  <datalist
                    id="topSpacingList"
                  >
                    <option>
                      0
                    </option>
                    <option>
                      2
                    </option>
                    <option>
                      4
                    </option>
                    <option>
                      6
                    </option>
                    <option>
                      8
                    </option>
                    <option>
                      10
                    </option>
                    <option>
                      12
                    </option>
                    <option>
                      14
                    </option>
                    <option>
                      16
                    </option>
                    <option>
                      18
                    </option>
                    <option>
                      20
                    </option>
                    <option>
                      22
                    </option>
                    <option>
                      24
                    </option>
                    <option>
                      26
                    </option>
                    <option>
                      28
                    </option>
                    <option>
                      30
                    </option>
                    <option>
                      32
                    </option>
                    <option>
                      34
                    </option>
                    <option>
                      36
                    </option>
                    <option>
                      38
                    </option>
                  </datalist>
                  <input
                    className="c17 c18"
                    onChange={[Function]}
                    type="number"
                    value={10}
                  />
                  pt
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Bottom spacing
                  </div>
                  <input
                    className="c23"
                    list="bottomSpacingLsit"
                    max={40}
                    min={0}
                    name="bottom-spacing"
                    onChange={[Function]}
                    step={2}
                    type="range"
                    value={10}
                  />
                  <datalist
                    id="bottomSpacingLsit"
                  >
                    <option>
                      0
                    </option>
                    <option>
                      2
                    </option>
                    <option>
                      4
                    </option>
                    <option>
                      6
                    </option>
                    <option>
                      8
                    </option>
                    <option>
                      10
                    </option>
                    <option>
                      12
                    </option>
                    <option>
                      14
                    </option>
                    <option>
                      16
                    </option>
                    <option>
                      18
                    </option>
                    <option>
                      20
                    </option>
                    <option>
                      22
                    </option>
                    <option>
                      24
                    </option>
                    <option>
                      26
                    </option>
                    <option>
                      28
                    </option>
                    <option>
                      30
                    </option>
                    <option>
                      32
                    </option>
                    <option>
                      34
                    </option>
                    <option>
                      36
                    </option>
                    <option>
                      38
                    </option>
                  </datalist>
                  <input
                    className="c17 c18"
                    onChange={[Function]}
                    type="number"
                    value={10}
                  />
                  pt
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    First line indent
                  </div>
                  <input
                    className="c23"
                    list="firstLineIndentList"
                    max={40}
                    min={0}
                    name="first-line-indent"
                    onChange={[Function]}
                    step={2}
                    type="range"
                    value={0}
                  />
                  <datalist
                    id="firstLineIndentList"
                  >
                    <option>
                      0
                    </option>
                    <option>
                      2
                    </option>
                    <option>
                      4
                    </option>
                    <option>
                      6
                    </option>
                    <option>
                      8
                    </option>
                    <option>
                      10
                    </option>
                    <option>
                      12
                    </option>
                    <option>
                      14
                    </option>
                    <option>
                      16
                    </option>
                    <option>
                      18
                    </option>
                    <option>
                      20
                    </option>
                    <option>
                      22
                    </option>
                    <option>
                      24
                    </option>
                    <option>
                      26
                    </option>
                    <option>
                      28
                    </option>
                    <option>
                      30
                    </option>
                    <option>
                      32
                    </option>
                    <option>
                      34
                    </option>
                    <option>
                      36
                    </option>
                    <option>
                      38
                    </option>
                  </datalist>
                  <input
                    className="c17 c18"
                    onChange={[Function]}
                    type="number"
                    value={0}
                  />
                  pt
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Line spacing
                  </div>
                  <input
                    className="c23"
                    list="lineSpacingList"
                    max={2}
                    min={1}
                    name="line-spacing"
                    onChange={[Function]}
                    step={0.25}
                    type="range"
                    value={2}
                  />
                  <input
                    className="c17 c18"
                    onChange={[Function]}
                    type="number"
                    value={2}
                  />
                  pt
                </div>
              </div>
              <div
                aria-labelledby="tabs--5--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--5--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Numbering
                  </div>
                  <select
                    className="c22"
                    name="section-numbering-scheme"
                    onChange={[Function]}
                    value="decimal"
                  >
                    <option
                      value="none"
                    >
                      None
                    </option>
                    <option
                      value="decimal"
                    >
                      1 2 3
                    </option>
                  </select>
                </div>
                <div
                  className="c15"
                >
                  <div
                    className="c16"
                  >
                    Suffix
                  </div>
                  <input
                    className="c17 c24"
                    name="list-suffix"
                    onChange={[Function]}
                    type="text"
                    value="."
                  />
                </div>
              </div>
              <div
                aria-labelledby="tabs--5--tab---1"
                className="c14"
                data-reach-tab-panel=""
                hidden={true}
                id="tabs--5--panel---1"
                role="tabpanel"
                tabIndex={-1}
              >
                <div
                  className="c15"
                >
                  <input
                    checked={false}
                    className=""
                    disabled={false}
                    id="part-of-toc"
                    name="part-of-toc"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c25"
                    htmlFor="part-of-toc"
                  >
                    Include in Table of Contents
                  </label>
                </div>
                <div
                  className="c15"
                >
                  <input
                    checked={false}
                    className=""
                    id="run-in"
                    name="run-in"
                    onChange={[Function]}
                    type="checkbox"
                  />
                  <label
                    className="c25"
                    htmlFor="run-in"
                  >
                    Run into first paragraph
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Statistics Inspector with section 1`] = `
.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c10 {
  font-size: 14px;
  font-weight: 400;
  margin-bottom: 12px;
}

.c10:not(:first-child) {
  margin-top: 24px;
}

.c8 {
  margin: 8px 8px 32px;
}

.c9 {
  margin-left: 8px;
}

.c9:not(:first-child) {
  margin-top: 16px;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Statistics
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c3 c10"
            >
              Manuscript
            </div>
          </div>
          <div
            className="c9"
          >
            <div
              className="c3 c10"
            >
              Section
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Inspector/Statistics Inspector without section 1`] = `
.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c4 svg + span {
  margin-left: 4px;
}

.c5 {
  padding: 0;
  height: 20px;
  width: 20px;
}

.c6 {
  color: #353535;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):hover,
.c6:not([disabled]):focus {
  color: #1a9bc7;
  background-color: transparent;
  border-color: transparent;
}

.c6:not([disabled]):active {
  color: #0d79d0;
  background-color: transparent;
  border-color: transparent;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c7 {
  border: none;
  border-radius: 50%;
}

.c7:focus:not([disabled]),
.c7:hover:not([disabled]) {
  background: #f2fbfc;
}

.c7 svg circle {
  stroke: #e2e2e2;
}

.c1 {
  border-bottom: 1px solid #f2f2f2;
  font-size: 14px;
  margin: 24px 28px 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  padding: 8px;
  cursor: pointer;
}

.c3 {
  font-size: 16px;
  font-weight: 600;
  color: #353535;
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
}

.c10 {
  font-size: 14px;
  font-weight: 400;
  margin-bottom: 12px;
}

.c10:not(:first-child) {
  margin-top: 24px;
}

.c8 {
  margin: 8px 8px 32px;
}

.c9 {
  margin-left: 8px;
}

.c9:not(:first-child) {
  margin-top: 16px;
}

<div
  className="c0"
>
  <div>
    <div
      style={
        Object {
          "width": 500,
        }
      }
    >
      <div
        className="c1"
      >
        <div
          className="c2"
          onClick={[Function]}
        >
          <div
            className="c3"
          >
            Statistics
          </div>
          <button
            aria-label="Toggle expand section"
            className="c4 c5 c6 c7"
            onClick={[Function]}
            size={20}
            style={
              Object {
                "transform": "rotate(0deg)",
              }
            }
            type="button"
          >
            <svg
              height={20}
              viewBox="0 0 20 20"
              width={20}
            >
              <g
                fill="none"
                fillRule="evenodd"
                transform="matrix(1 0 0 -1 0 20)"
              >
                <circle
                  cx={10}
                  cy={10}
                  r={9}
                  stroke="#E2E2E2"
                />
                <path
                  d="M6.505 10.974l3.548-3 3.652 2.96"
                  stroke="#6E6E6E"
                  strokeLinecap="round"
                  strokeWidth={2}
                />
              </g>
            </svg>
          </button>
        </div>
        <div
          className="c8"
        >
          <div
            className="c9"
          >
            <div
              className="c3 c10"
            >
              Manuscript
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;
