// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Notification ServiceWorker 1`] = `
.c10 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c10 svg + span {
  margin-left: 4px;
}

.c11 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c11:not([disabled]):hover,
.c11:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c11:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c12 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c12:not([disabled]):hover,
.c12:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c12:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c8 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c8 button:not(:first-child) {
  margin-left: 4px;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  position: fixed;
  bottom: 0px;
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 100;
}

.c2 {
  border: 1px solid #e2e2e2;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  border-radius: 4px;
  padding: 8px 8px 8px 16px;
  font-family: "Lato",sans-serif;
  background: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  box-sizing: border-box;
  width: 100%;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.c4 {
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.c6 {
  font-size: 14px;
}

.c7 {
  color: inherit;
  font-size: 12px;
}

.c5 {
  margin: 0 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (max-width:767px) {
  .c9 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .c9 button:not(:first-child) {
    margin: 4px 0 0;
  }
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        style={
          Object {
            "display": "flex",
            "marginBottom": 0,
            "maxWidth": "90%",
            "opacity": 0,
            "transform": "translate3d(0, 100%, 0)",
            "width": 800,
          }
        }
      >
        <div
          className="c2"
        >
          <div
            className="c3"
          >
            <svg
              className="c4"
              height={24}
              viewBox="0 0 24 24"
              width={24}
            >
              <path
                d="M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.2 22.5 12 22.5zm0 1.5c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.372 12 12 12zm0-16a1 1 0 110-2 1 1 0 010 2zm.02 10.2a.9.9 0 01-.9-.9v-7.2a.9.9 0 111.8 0v7.2a.9.9 0 01-.9.9z"
                fill="#1A9BC7"
                fillRule="evenodd"
              />
            </svg>
            <div
              className="c5"
            >
              <div
                className="c6"
              >
                A new version of the app is available on refreshing.
              </div>
              <a
                className="c7"
                href="undefined/c/updates"
                target="_blank"
              >
                What's new?
              </a>
            </div>
          </div>
          <div
            className="c8 c9"
          >
            <button
              className="c10 c11"
              onClick={[Function]}
              type="button"
            >
              Dismiss
            </button>
            <button
              className="c10 c12"
              onClick={[Function]}
              type="button"
            >
              Refresh
            </button>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "display": "flex",
            "marginBottom": 0,
            "maxWidth": "90%",
            "opacity": 0,
            "transform": "translate3d(0, 100%, 0)",
            "width": 800,
          }
        }
      >
        <div
          className="c2"
        >
          <div
            className="c3"
          >
            <svg
              className="c4"
              height={24}
              viewBox="0 0 24 24"
              width={24}
            >
              <path
                d="M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.2 22.5 12 22.5zm0 1.5c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.372 12 12 12zm0-16a1 1 0 110-2 1 1 0 010 2zm.02 10.2a.9.9 0 01-.9-.9v-7.2a.9.9 0 111.8 0v7.2a.9.9 0 01-.9.9z"
                fill="#1A9BC7"
                fillRule="evenodd"
              />
            </svg>
            <div
              className="c5"
            >
              <div
                className="c6"
              >
                A new version of the app is available on refreshing.
              </div>
              <a
                className="c7"
                href="undefined/c/updates"
                target="_blank"
              >
                What's new?
              </a>
            </div>
          </div>
          <div
            className="c8 c9"
          >
            <button
              className="c10 c11"
              onClick={[Function]}
              type="button"
            >
              Dismiss
            </button>
            <button
              className="c10 c12"
              onClick={[Function]}
              type="button"
            >
              Refresh
            </button>
          </div>
        </div>
      </div>
      <div
        style={
          Object {
            "display": "flex",
            "marginBottom": 0,
            "maxWidth": "90%",
            "opacity": 0,
            "transform": "translate3d(0, 100%, 0)",
            "width": 800,
          }
        }
      >
        <div
          className="c2"
        >
          <div
            className="c3"
          >
            <svg
              className="c4"
              height={24}
              viewBox="0 0 24 24"
              width={24}
            >
              <path
                d="M12 22.5c5.799 0 10.5-4.701 10.5-10.5S17.799 1.5 12 1.5 1.5 6.201 1.5 12 6.2 22.5 12 22.5zm0 1.5c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.372 12 12 12zm0-16a1 1 0 110-2 1 1 0 010 2zm.02 10.2a.9.9 0 01-.9-.9v-7.2a.9.9 0 111.8 0v7.2a.9.9 0 01-.9.9z"
                fill="#1A9BC7"
                fillRule="evenodd"
              />
            </svg>
            <div
              className="c5"
            >
              <div
                className="c6"
              >
                A new version of the app is available on refreshing.
              </div>
              <a
                className="c7"
                href="undefined/c/updates"
                target="_blank"
              >
                What's new?
              </a>
            </div>
          </div>
          <div
            className="c8 c9"
          >
            <button
              className="c10 c11"
              onClick={[Function]}
              type="button"
            >
              Dismiss
            </button>
            <button
              className="c10 c12"
              onClick={[Function]}
              type="button"
            >
              Refresh
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots SyncNotification basic 1`] = `
.c7 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c7 svg + span {
  margin-left: 4px;
}

.c8 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c8:not([disabled]):hover,
.c8:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c8:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 button:not(:first-child) {
  margin-left: 4px;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  border: 1px solid #e2e2e2;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  border-radius: 4px;
  padding: 8px 8px 8px 16px;
  font-family: "Lato",sans-serif;
  background: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  box-sizing: border-box;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.c4 {
  font-size: 14px;
}

.c3 {
  margin: 0 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

@media (max-width:767px) {
  .c6 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .c6 button:not(:first-child) {
    margin: 4px 0 0;
  }
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <svg
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <circle
              cx={12}
              cy={18.7}
              fill="#FE8F1F"
              r={1}
            />
            <rect
              fill="#FE8F1F"
              height={9}
              rx={0.9}
              width={1.8}
              x={11.12}
              y={7.5}
            />
            <path
              d="M12.901 1.98l9.41 19.587a1 1 0 01-.9 1.433H2.59a1 1 0 01-.901-1.433l9.41-19.586a1 1 0 011.802 0z"
              stroke="#FE8F1F"
              strokeWidth={1.5}
            />
          </g>
        </svg>
        <div
          className="c3"
        >
          <div
            className="c4"
          >
            You best watch yourself
          </div>
        </div>
      </div>
      <div
        className="c5 c6"
      >
        <button
          className="c7 c8"
          onClick={[Function]}
          type="button"
        >
          Sounds good
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots SyncNotification with diagnostics 1`] = `
.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c8 svg + span {
  margin-left: 4px;
}

.c9 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):hover,
.c9:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 button:not(:first-child) {
  margin-left: 4px;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  border: 1px solid #e2e2e2;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  border-radius: 4px;
  padding: 8px 8px 8px 16px;
  font-family: "Lato",sans-serif;
  background: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  box-sizing: border-box;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.c4 {
  font-size: 14px;
}

.c3 {
  margin: 0 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  color: inherit;
  font-size: 80%;
}

@media (max-width:767px) {
  .c7 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .c7 button:not(:first-child) {
    margin: 4px 0 0;
  }
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <svg
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <circle
              cx={12}
              cy={18.7}
              fill="#FE8F1F"
              r={1}
            />
            <rect
              fill="#FE8F1F"
              height={9}
              rx={0.9}
              width={1.8}
              x={11.12}
              y={7.5}
            />
            <path
              d="M12.901 1.98l9.41 19.587a1 1 0 01-.9 1.433H2.59a1 1 0 01-.901-1.433l9.41-19.586a1 1 0 011.802 0z"
              stroke="#FE8F1F"
              strokeWidth={1.5}
            />
          </g>
        </svg>
        <div
          className="c3"
        >
          <div
            className="c4"
          >
            Uh-oh, this is really bad
          </div>
          <div
            className="c5"
          >
            <span
              style={
                Object {
                  "color": "red",
                }
              }
            >
              One possible action
            </span>
             
            <span
              style={
                Object {
                  "color": "blue",
                }
              }
            >
              Another possible action
            </span>
             
          </div>
        </div>
      </div>
      <div
        className="c6 c7"
      >
        <button
          className="c8 c9"
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots SyncNotification with primary button 1`] = `
.c8 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c8 svg + span {
  margin-left: 4px;
}

.c9 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):hover,
.c9:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c9:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c10 {
  color: #fff;
  background-color: #0d79d0;
  border-color: #0d79d0;
}

.c10:not([disabled]):hover,
.c10:not([disabled]):focus {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c10:not([disabled]):active {
  color: #fff;
  background-color: #0b6bb8;
  border-color: #0b6bb8;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -webkit-justify-content: flex-end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 button:not(:first-child) {
  margin-left: 4px;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  border: 1px solid #e2e2e2;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  border-radius: 4px;
  padding: 8px 8px 8px 16px;
  font-family: "Lato",sans-serif;
  background: #fff;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  box-sizing: border-box;
  width: 100%;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  -webkit-flex: 0;
  -ms-flex: 0;
  flex: 0;
}

.c4 {
  font-size: 14px;
}

.c3 {
  margin: 0 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c5 {
  color: inherit;
  font-size: 80%;
}

@media (max-width:767px) {
  .c7 {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  }

  .c7 button:not(:first-child) {
    margin: 4px 0 0;
  }
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <div
        className="c2"
      >
        <svg
          height={24}
          viewBox="0 0 24 24"
          width={24}
        >
          <g
            fill="none"
            fillRule="evenodd"
          >
            <circle
              cx={12}
              cy={18.7}
              fill="#FE8F1F"
              r={1}
            />
            <rect
              fill="#FE8F1F"
              height={9}
              rx={0.9}
              width={1.8}
              x={11.12}
              y={7.5}
            />
            <path
              d="M12.901 1.98l9.41 19.587a1 1 0 01-.9 1.433H2.59a1 1 0 01-.901-1.433l9.41-19.586a1 1 0 011.802 0z"
              stroke="#FE8F1F"
              strokeWidth={1.5}
            />
          </g>
        </svg>
        <div
          className="c3"
        >
          <div
            className="c4"
          >
            Something is wrong, but we have a solution
          </div>
          <div
            className="c5"
          >
            Click the primary button to give us permission
             
          </div>
        </div>
      </div>
      <div
        className="c6 c7"
      >
        <button
          className="c8 c9"
          onClick={[Function]}
          type="button"
        >
          Cancel
        </button>
        <button
          className="c8 c10"
          onClick={[Function]}
          type="button"
        >
          Go ahead
        </button>
      </div>
    </div>
  </div>
</div>
`;
