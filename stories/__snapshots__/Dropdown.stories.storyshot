// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Nav/Dropdown Button 1`] = `
.c1 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c1 svg + span {
  margin-left: 4px;
}

.c2 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c2:not([disabled]):hover,
.c2:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c2:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c6 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  padding: 2px;
  border-radius: 50px;
}

.c4 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 4px;
}

.c5 {
  margin-left: 6px;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c5 path {
  stroke: currentColor;
}

.c5.open {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.c7 {
  background-color: #0d79d0;
  color: #fff;
  font-family: "Lato",sans-serif;
  font-size: 9px;
  margin-left: 4px;
  max-height: 10px;
  min-width: 10px;
  min-height: 10px;
}

.c8 {
  background-color: #dff0d7;
  color: #36b260;
  font-family: "Lato",sans-serif;
  font-size: 9px;
  margin-left: 4px;
  max-height: 10px;
  min-width: 10px;
  min-height: 10px;
}

.c3 .inheritColors path {
  fill: currentColor;
  stroke: currentColor;
}

<div
  className="c0"
>
  <div>
    <div>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          Closed
        </div>
        <svg
          className="c5"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={true}
        type="button"
      >
        <div
          className="c4"
        >
          Open
        </div>
        <svg
          className="c5 open"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          Closed with notifications
        </div>
        <div
          className="c6 c7"
        >
          3
        </div>
        <svg
          className="c5"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={true}
        type="button"
      >
        <div
          className="c4"
        >
          Open with notifications
        </div>
        <div
          className="c6 c8"
        >
          3
        </div>
        <svg
          className="c5 open"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          More notifications
        </div>
        <div
          className="c6 c7"
        >
          30
        </div>
        <svg
          className="c5"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          More notifications
        </div>
        <div
          className="c6 c7"
        >
          300
        </div>
        <svg
          className="c5"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          More notifications
        </div>
        <div
          className="c6 c7"
        >
          3000
        </div>
        <svg
          className="c5"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <button
        className="c1 c2 c3 dropdown-toggle"
        selected={false}
        type="button"
      >
        <div
          className="c4"
        >
          Without Chevron
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Nav/Dropdown Menu - Projects Dropdown 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c2 svg + span {
  margin-left: 4px;
}

.c3 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c3:not([disabled]):hover,
.c3:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c3:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 4px;
}

.c4 .inheritColors path {
  fill: currentColor;
  stroke: currentColor;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
      id="projects-dropdown"
    >
      <button
        className="c2 c3 c4 dropdown-toggle"
        onClick={[Function]}
        selected={false}
        type="button"
      >
        <div
          className="c5"
        >
          Projects
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Nav/Dropdown Menu 1`] = `
.c2 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  background: transparent;
  border: 1px solid transparent;
  border-radius: 4px;
  cursor: pointer;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  font: 400 16px / 24px "Lato",sans-serif;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  padding: 7px 12px;
  -webkit-transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  transition: border 0.1s,color 0.1s,background-color 0.1s,color 0.1s, filter 0.1s;
  vertical-align: middle;
  white-space: nowrap;
}

.c2 svg + span {
  margin-left: 4px;
}

.c3 {
  color: #353535;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c3:not([disabled]):hover,
.c3:not([disabled]):focus {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c3:not([disabled]):active {
  color: #0d79d0;
  background-color: #fff;
  border-color: #e2e2e2;
}

.c0 {
  background-color: #fff;
  color: #353535;
  font-family: "Lato",sans-serif;
  padding: 3rem;
}

.c1 {
  position: relative;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  border: 1px solid #e2e2e2;
  border-radius: 4px;
  box-shadow: 0 4px 9px 0 rgba(84,83,83,0.3);
  background: #fff;
  color: #353535;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  font-size: 14px;
  font-weight: 400;
  max-height: 80vh;
  max-width: 300px;
  left: 0;
  top: 40px;
  position: absolute;
  z-index: 10;
}

.c10 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 12px 12px;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  color: #353535;
  pointer-events: unset;
}

.c10:hover,
.c10:hover .Dropdown__PlaceholderTitle-fhxyb7-2 {
  background: #f2fbfc;
}

.c9 {
  height: 1px;
  width: 100%;
  opacity: 0.23;
  background-color: #bce7f6;
}

.c5 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  margin-right: 4px;
}

.c6 {
  margin-left: 6px;
  -webkit-transform: rotate(180deg);
  -ms-transform: rotate(180deg);
  transform: rotate(180deg);
}

.c6 path {
  stroke: currentColor;
}

.c6.open {
  -webkit-transform: rotate(0deg);
  -ms-transform: rotate(0deg);
  transform: rotate(0deg);
}

.c4 .inheritColors path {
  fill: currentColor;
  stroke: currentColor;
}

.c8 {
  padding: 12px 12px;
  color: #6e6e6e;
  font-weight: 500;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

<div
  className="c0"
>
  <div>
    <div
      className="c1"
    >
      <button
        className="c2 c3 c4 dropdown-toggle"
        onClick={[Function]}
        selected={false}
        type="button"
      >
        <div
          className="c5"
        >
          Menu
        </div>
        <svg
          className="c6"
          height={8}
          viewBox="0 0 12 8"
          width={12}
        >
          <path
            d="M10 6L6.058 2 2 5.947"
            fill="none"
            stroke="#353535"
            strokeLinecap="round"
            strokeWidth={1.6}
          />
        </svg>
      </button>
      <div
        className="c7"
      >
        <div
          className="c8"
        >
          Janine
        </div>
        <div
          className="c9"
        />
        <a
          aria-current={null}
          className="c10"
          href="/profile"
          onClick={[Function]}
        >
           Profile 
        </a>
        <div
          className="c9"
        />
        <a
          aria-current={null}
          className="c10"
          href="/diagnostics"
          onClick={[Function]}
        >
          Diagnostics
        </a>
        <div
          className="c9"
        />
        <a
          aria-current={null}
          className="c10"
          href="/logout"
          onClick={[Function]}
        >
          Sign out
        </a>
      </div>
    </div>
  </div>
</div>
`;
